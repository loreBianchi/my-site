{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./src/components/contact.js"],"names":["lang","title","style","minHeight","Contact","props","state","submitDisabled","textAreaInput","bind","handleSubmit","showContactForm","contact","api_url","event","target","height","scrollHeight","preventDefault","this","setState","name","encodeURI","dataName","value","email","dataEmail","message","dataMessage","fetch","method","body","then","res","json","result","resMessage","opacity","response","innerHTML","classList","add","remove","_this","setTimeout","error","componentDidMount","color","window","getComputedStyle","btn","getPropertyValue","querySelector","setAttribute","contactArea","querySelectorAll","forEach","e","i","p","render","id","className","ref","c","type","required","overflowY","onChange","onClick","display","description","mail","href","phone","address","whiteSpace","React","Component","query","data","site","siteMetadata"],"mappings":"6FAAA,oEAKe,qBACX,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKA,KAAK,KAAKC,MAAM,YACrB,yBAAKC,MAAO,CAAEC,UAAW,UACrB,kBAAC,IAAD,U,gQCHVC,E,oBACF,WAAYC,GAAQ,IAAD,SACf,cAAMA,IAAN,MAEKC,MAAQ,CACTC,gBAAgB,GAGpB,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,MACrB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,MAEpB,EAAKE,iBAAkB,EAEY,KAA/B,EAAKN,MAAMO,QAAQC,UACnB,EAAKF,iBAAkB,GAbZ,E,kHAiBnBH,cAAA,SAAcM,GACVA,EAAMC,OAAOb,MAAMc,OAAS,OAC5BF,EAAMC,OAAOb,MAAMc,OAASF,EAAMC,OAAOE,aAAe,M,EAG5DP,aAAA,SAAaI,GAAQ,IAAD,OAEhB,GADAA,EAAMI,kBACDC,KAAKb,MAAMC,eAAgB,CAC5BY,KAAKC,SAAS,CACVb,gBAAgB,IAGpB,IAAIc,EAAOC,UAAUH,KAAKI,SAASC,OAC/BC,EAAQH,UAAUH,KAAKO,UAAUF,OACjCG,EAAUL,UAAUH,KAAKS,YAAYJ,OAGzCK,MAAM,mCAAoC,CACtCC,OAAQ,OACRC,KAJI,QAAWV,EAAX,UAAyBI,EAAzB,YAA0CE,IAM7CK,MAAK,SAASC,GACX,OAAOA,EAAIC,UAEdF,MACG,SAAAG,GACI,EAAKf,SAAS,CACVb,gBAAgB,IAEpB,EAAK6B,WAAWlC,MAAMmC,QAAU,EACR,UAApBF,EAAOG,UACP,EAAKF,WAAWG,UACZ,4CACJ,EAAKH,WAAWI,UAAUC,IAAI,iBAE9B,EAAKL,WAAWG,UACZ,2BACJ,EAAKH,WAAWI,UAAUE,OAAO,gBAErC,EAAKnB,SAASC,MAAQ,GACtB,EAAKE,UAAUF,MAAQ,GACvB,EAAKI,YAAYJ,MAAQ,GACzB,IAAImB,EAAQ,EACZC,YAAW,WACPD,EAAMP,WAAWlC,MAAMmC,QAAU,IAClC,QAEP,SAAAQ,GACI,EAAKT,WAAWG,UAAY,2BAC5B,EAAKH,WAAWI,UAAUE,OAAO,eACjC,EAAKtB,SAAS,CACVb,gBAAgB,IAEpB,IAAIoC,EAAQ,EACZC,YAAW,WACPD,EAAMP,WAAWlC,MAAMmC,QAAU,IAClC,U,EAMvBS,kBAAA,WACI,GAAI3B,KAAKR,gBAAiB,CACtB,IAAIoC,EAAQC,OACPC,iBAAiB9B,KAAK+B,IAAK,MAC3BC,iBAAiB,SACtBhC,KAAK+B,IAAIE,cAAc,QAAQC,aAAa,OAAQN,GAG/C5B,KAAKmC,YAAYC,iBAAiB,SAExCC,SAAQ,SAASC,EAAGC,GACnB,IAAIC,EAAIF,EAAEL,cAAc,QACpBO,GACAA,EAAEN,aACE,OACAL,OAAOC,iBAAiBQ,EAAG,MAAMN,iBAAiB,c,EAKlES,OAAA,WAAU,IAAD,OACL,OACI,6BAASC,GAAG,UAAUC,UAAU,aAC5B,yBAAKA,UAAU,iBACX,kBAAC,IAAD,CAAc7D,MAAM,aAExB,yBACI6D,UAAW,OAAS3C,KAAKR,gBAAkB,GAAK,YAChDoD,IAAK,SAAAC,GAAC,OAAK,EAAKV,YAAcU,IAE7B7C,KAAKR,iBACF,yBAAKmD,UAAU,cACX,8BACI,yBAAKA,UAAU,SACX,+BACI,0BAAMA,UAAU,uBAAhB,QAGA,yBAAKA,UAAU,gBACX,2BACIG,KAAK,OACLF,IAAK,SAAAC,GAAC,OAAK,EAAKzC,SAAWyC,GAC3BF,UAAU,YACVzC,KAAK,OACLwC,GAAG,OACHK,UAAQ,OAKxB,yBAAKJ,UAAU,SACX,+BACI,0BAAMA,UAAU,uBAAhB,SAGA,yBAAKA,UAAU,gBACX,2BACIG,KAAK,QACLF,IAAK,SAAAC,GAAC,OAAK,EAAKtC,UAAYsC,GAC5BF,UAAU,YACVzC,KAAK,QACLwC,GAAG,QACHK,UAAQ,OAKxB,yBAAKJ,UAAU,SACX,+BACI,0BAAMA,UAAU,uBAAhB,WAGA,yBAAKA,UAAU,gBACX,8BACI5D,MAAO,CAAEiE,UAAW,UACpBJ,IAAK,SAAAC,GAAC,OACD,EAAKpC,YAAcoC,GAExBF,UAAU,YACVM,SAAUjD,KAAKX,cACfa,KAAK,UACLwC,GAAG,UACHK,UAAQ,OAKxB,yBAAKJ,UAAU,SACX,2BAAOA,UAAU,MACb,4BACIA,UACI,OACC3C,KAAKb,MAAMC,eACN,YACA,IAEV8D,QAASlD,KAAKT,aACdmD,GAAG,SACHE,IAAK,SAAAC,GAAC,OAAK,EAAKd,IAAMc,IAT1B,OAWS,IACL,0BACIF,UAAU,mBACV5D,MAAO,CACHoE,QAASnD,KAAKb,MACTC,eACC,OACA,iBAGV,kBAAC,IAAD,OAEJ,0BACIuD,UAAU,eACV5D,MAAO,CACHoE,QAAUnD,KAAKb,MACVC,eAEC,eADA,SAIV,kBAAC,IAAD,SAIZ,+BACI,uBACIuD,UAAU,cACVC,IAAK,SAAAC,GAAC,OAAK,EAAK5B,WAAa4B,SAOrD,yBACIF,UACI3C,KAAKR,gBACC,qBACA,mBAGTQ,KAAKd,MAAMO,QAAQ2D,aAChB,uBAAGT,UAAU,iBACR3C,KAAKd,MAAMO,QAAQ2D,aAG5B,4BACKpD,KAAKd,MAAMO,QAAQ4D,MAChB,wBAAIV,UAAU,uBACV,0BAAMA,UAAU,QACZ,kBAAC,IAAD,OAEJ,uBACIW,KACI,UAAYtD,KAAKd,MAAMO,QAAQ4D,MAGlCrD,KAAKd,MAAMO,QAAQ4D,OAI/BrD,KAAKd,MAAMO,QAAQ8D,OAChB,wBAAIZ,UAAU,uBACV,0BAAMA,UAAU,QACZ,kBAAC,IAAD,OAEJ,uBAAGW,KAAM,OAAStD,KAAKd,MAAMO,QAAQ8D,OAChCvD,KAAKd,MAAMO,QAAQ8D,QAI/BvD,KAAKd,MAAMO,QAAQ+D,SAChB,wBACIb,UAAU,qBACV5D,MAAO,CAAE0E,WAAY,QAErB,0BAAMd,UAAU,QACZ,kBAAC,IAAD,OAEH3C,KAAKd,MAAMO,QAAQ+D,SAG5B,4BACI,kBAAC,IAAD,Y,GAxQVE,IAAMC,WAkRb,sBACX,kBAAC,IAAD,CACIC,MAAK,aAeLnB,OAAQ,SAAAoB,GAAI,OAAI,kBAAC5E,EAAD,CAASQ,QAASoE,EAAKC,KAAKC,aAAatE,WAhB7D,W","file":"component---src-pages-contact-js-1be9dc2936bcdac9d009.js","sourcesContent":["import React from \"react\";\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\nimport Contact from \"../components/contact\";\r\n\r\nexport default function() {\r\n    return (\r\n        <Layout>\r\n            <SEO lang=\"en\" title=\"Contact\" />\r\n            <div style={{ minHeight: \"600px\" }}>\r\n                <Contact />\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport SectionTitle from \"./sectiontitle\";\r\nimport { StaticQuery, graphql } from \"gatsby\";\r\nimport { PaperPlane, Mapmarker, Mobile, Envelope, Loading } from \"./icons\";\r\nimport SocialLinks from \"./sociallinks\";\r\nimport \"../style/contact.less\";\r\n\r\nclass Contact extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            submitDisabled: false\r\n        };\r\n\r\n        this.textAreaInput = this.textAreaInput.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.showContactForm = true;\r\n\r\n        if (this.props.contact.api_url === \"\") {\r\n            this.showContactForm = false;\r\n        }\r\n    }\r\n\r\n    textAreaInput(event) {\r\n        event.target.style.height = \"auto\";\r\n        event.target.style.height = event.target.scrollHeight + \"px\";\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (!this.state.submitDisabled) {\r\n            this.setState({\r\n                submitDisabled: true\r\n            });\r\n\r\n            let name = encodeURI(this.dataName.value),\r\n                email = encodeURI(this.dataEmail.value),\r\n                message = encodeURI(this.dataMessage.value),\r\n                body = `name=${name}&email=${email}&message=${message}`;\r\n\r\n            fetch(\"http://localhost/local/test.json\", {\r\n                method: \"post\",\r\n                body: body\r\n            })\r\n                .then(function(res) {\r\n                    return res.json();\r\n                })\r\n                .then(\r\n                    result => {\r\n                        this.setState({\r\n                            submitDisabled: false\r\n                        });\r\n                        this.resMessage.style.opacity = 1;\r\n                        if (result.response === \"error\") {\r\n                            this.resMessage.innerHTML =\r\n                                \"There was an error in sending the message\";\r\n                            this.resMessage.classList.add(\"color-error\");\r\n                        } else {\r\n                            this.resMessage.innerHTML =\r\n                                \"Message sent succesfully\";\r\n                            this.resMessage.classList.remove(\"color-error\");\r\n                        }\r\n                        this.dataName.value = \"\";\r\n                        this.dataEmail.value = \"\";\r\n                        this.dataMessage.value = \"\";\r\n                        let _this = this;\r\n                        setTimeout(function() {\r\n                            _this.resMessage.style.opacity = 0;\r\n                        }, 5000);\r\n                    },\r\n                    error => {\r\n                        this.resMessage.innerHTML = \"Message sent succesfully\";\r\n                        this.resMessage.classList.remove(\"color-error\");\r\n                        this.setState({\r\n                            submitDisabled: false\r\n                        });\r\n                        let _this = this;\r\n                        setTimeout(function() {\r\n                            _this.resMessage.style.opacity = 0;\r\n                        }, 5000);\r\n                    }\r\n                );\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.showContactForm) {\r\n            let color = window\r\n                .getComputedStyle(this.btn, null)\r\n                .getPropertyValue(\"color\");\r\n            this.btn.querySelector(\"path\").setAttribute(\"fill\", color);\r\n        }\r\n\r\n        let li = this.contactArea.querySelectorAll(\".item\");\r\n\r\n        li.forEach(function(e, i) {\r\n            let p = e.querySelector(\"path\");\r\n            if (p)\r\n                p.setAttribute(\r\n                    \"fill\",\r\n                    window.getComputedStyle(e, null).getPropertyValue(\"color\")\r\n                );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section id=\"contact\" className=\"container\">\r\n                <div className=\"section-title\">\r\n                    <SectionTitle title=\"CONTACT\" />\r\n                </div>\r\n                <div\r\n                    className={\"row\" + (this.showContactForm ? \"\" : \" no-form\")}\r\n                    ref={c => (this.contactArea = c)}\r\n                >\r\n                    {this.showContactForm && (\r\n                        <div className=\"col s12 m6\">\r\n                            <form>\r\n                                <div className=\"field\">\r\n                                    <label>\r\n                                        <span className=\"label text-tertiary\">\r\n                                            Name\r\n                                        </span>\r\n                                        <div className=\"input-border\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                ref={c => (this.dataName = c)}\r\n                                                className=\"field-box\"\r\n                                                name=\"name\"\r\n                                                id=\"name\"\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"field\">\r\n                                    <label>\r\n                                        <span className=\"label text-tertiary\">\r\n                                            Email\r\n                                        </span>\r\n                                        <div className=\"input-border\">\r\n                                            <input\r\n                                                type=\"email\"\r\n                                                ref={c => (this.dataEmail = c)}\r\n                                                className=\"field-box\"\r\n                                                name=\"email\"\r\n                                                id=\"email\"\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"field\">\r\n                                    <label>\r\n                                        <span className=\"label text-tertiary\">\r\n                                            Message\r\n                                        </span>\r\n                                        <div className=\"input-border\">\r\n                                            <textarea\r\n                                                style={{ overflowY: \"hidden\" }}\r\n                                                ref={c =>\r\n                                                    (this.dataMessage = c)\r\n                                                }\r\n                                                className=\"field-box\"\r\n                                                onChange={this.textAreaInput}\r\n                                                name=\"message\"\r\n                                                id=\"message\"\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"field\">\r\n                                    <label className=\"ib\">\r\n                                        <button\r\n                                            className={\r\n                                                \"btn\" +\r\n                                                (this.state.submitDisabled\r\n                                                    ? \" disabled\"\r\n                                                    : \"\")\r\n                                            }\r\n                                            onClick={this.handleSubmit}\r\n                                            id=\"submit\"\r\n                                            ref={c => (this.btn = c)}\r\n                                        >\r\n                                            SEND{\" \"}\r\n                                            <span\r\n                                                className=\"icon paper-plane\"\r\n                                                style={{\r\n                                                    display: this.state\r\n                                                        .submitDisabled\r\n                                                        ? \"none\"\r\n                                                        : \"inline-block\"\r\n                                                }}\r\n                                            >\r\n                                                <PaperPlane />\r\n                                            </span>\r\n                                            <span\r\n                                                className=\"icon loading\"\r\n                                                style={{\r\n                                                    display: !this.state\r\n                                                        .submitDisabled\r\n                                                        ? \"none\"\r\n                                                        : \"inline-block\"\r\n                                                }}\r\n                                            >\r\n                                                <Loading />\r\n                                            </span>\r\n                                        </button>\r\n                                    </label>\r\n                                    <label>\r\n                                        <p\r\n                                            className=\"res-message\"\r\n                                            ref={c => (this.resMessage = c)}\r\n                                        ></p>\r\n                                    </label>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    )}\r\n                    <div\r\n                        className={\r\n                            this.showContactForm\r\n                                ? \"col s12 m6 details\"\r\n                                : \"col s12 details\"\r\n                        }\r\n                    >\r\n                        {this.props.contact.description && (\r\n                            <p className=\"text-tertiary\">\r\n                                {this.props.contact.description}\r\n                            </p>\r\n                        )}\r\n                        <ul>\r\n                            {this.props.contact.mail && (\r\n                                <li className=\"text-secondary item\">\r\n                                    <span className=\"icon\">\r\n                                        <Envelope />\r\n                                    </span>\r\n                                    <a\r\n                                        href={\r\n                                            \"mailto:\" + this.props.contact.mail\r\n                                        }\r\n                                    >\r\n                                        {this.props.contact.mail}\r\n                                    </a>\r\n                                </li>\r\n                            )}\r\n                            {this.props.contact.phone && (\r\n                                <li className=\"text-secondary item\">\r\n                                    <span className=\"icon\">\r\n                                        <Mobile />\r\n                                    </span>\r\n                                    <a href={\"tel:\" + this.props.contact.phone}>\r\n                                        {this.props.contact.phone}\r\n                                    </a>\r\n                                </li>\r\n                            )}\r\n                            {this.props.contact.address && (\r\n                                <li\r\n                                    className=\"text-tertiary item\"\r\n                                    style={{ whiteSpace: \"pre\" }}\r\n                                >\r\n                                    <span className=\"icon\">\r\n                                        <Mapmarker />\r\n                                    </span>\r\n                                    {this.props.contact.address}\r\n                                </li>\r\n                            )}\r\n                            <li>\r\n                                <SocialLinks />\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default () => (\r\n    <StaticQuery\r\n        query={graphql`\r\n            query {\r\n                site {\r\n                    siteMetadata {\r\n                        contact {\r\n                            api_url\r\n                            description\r\n                            mail\r\n                            phone\r\n                            address\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        `}\r\n        render={data => <Contact contact={data.site.siteMetadata.contact} />}\r\n    />\r\n);\r\n"],"sourceRoot":""}